apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//apply from: '../publish.gradle'


ext {
    artifact = 'XStarter'
    libraryName = 'XStarter'
    libraryDescription = 'Android Moduler Starter'
    libraryVersion = '1.0.0-alpha02'
}


//ext {
//    PUBLISH_GROUP_ID = 'moduler'
//    PUBLISH_ARTIFACT_ID = 'XStarter'
//
//    PUBLISH_VERSION = '1.0.0-alpha'
//    PUBLISH_DESC = 'Android Moduler Starter'
//
//}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
}

task cleanSource(group: "upload") {
    String rootDir = getRootDir()
    String sourceDir = rootDir + "/starter-script/src/main/java/"
    delete sourceDir
}

task copySource(dependsOn: "cleanSource", group: "upload") {

    String rootDir = getRootDir()
    String scriptPath = rootDir + "/starter-script/"
    String apiPath = rootDir + "/starter-api/"
    String annotationPath = rootDir + "/starter-annotation/"

    copy() {
        from apiPath
        into scriptPath
        exclude '**/build/'
        include '**/*.java'
        exclude '**/*.gradle'
        exclude '**/*.xml'
    }

    copy() {
        from annotationPath
        into scriptPath
        exclude '**/build/'
        include '**/*.java'
        exclude 'build.gradle'
    }
}

apply from: '../maven-publish.gradle'